# -*- coding: utf-8 -*-
#После завершения работы с файлом, его нужно закрыть. В некоторых случаях Python может самостоятельно закрыть файл.
# Но лучше на это не рассчитывать и закрывать файл явно.

#close() - закрытие файла
f = open('r1.txt', 'r')
print(f.read())

#У объекта file есть специальный атрибут closed, который позволяет проверить, закрыт файл или нет.
# Если файл открыт, он возвращает False:
print(f.closed)

#Использование try/finally для работы с файлами
#С помощью обработки исключений, можно:
#перехватывать исключения, которые возникают, при попытке прочитать несуществующий файл
#закрывать файл, после всех операций, в блоке finally

#Если попытаться открыть для чтения файл, которого не существует, возникнет такое исключение:
try:
    f = open('r3.txt', 'r')
except IOError:
    print('No such file')

#А с помощью части finally, можно закрыть файл, после всех операций:
try:
    f = open('r1.txt', 'r')
    print(f.read())
except IOError:
    print('No such file')
finally:
    f.close()
    print(f.closed)