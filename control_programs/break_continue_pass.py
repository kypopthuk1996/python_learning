# -*- coding: utf-8 -*-
#Break - позволяет досрочно прервать цикл:
#break прерывает текущий цикл и продолжает выполнение следующих выражений
#если используется несколько вложенных циклов, break прерывает внутренний цикл и продолжает выполнять выражения,
#следующие за блоком * break может использоваться в циклах for и while

for num in range(10):
    if num < 7:
        print(num)
    else:
        break

i = 0
while i < 10:
    if i == 5:
        break
    else:
        print(i)
        i += 1
#Continue - Оператор continue возвращает управление в начало цикла.
#То есть, continue позволяет «перепрыгнуть» оставшиеся выражения в цикле и перейти к следующей итерации.
for num in range(5):
    if num == 3:
        continue
    else:
         print(num)

i = 0
while i < 6:
    i = i + 1
    if i == 3:
        print("Пропускаем 3")
        continue
        print("Это никто не увидит")
    else:
        print("Текущее значение: ", i)
#Pass - Оператор pass ничего не делает. Фактически, это такая заглушка для объектов.
#Например, pass может помочь в ситуации, когда нужно прописать структуру скрипта.
#Его можно ставить в циклах, функциях, классах.
#И это не будет влиять на исполнение кода.

for num in range(5):
    if num < 3:
        pass
    else:
        print(num)
